@model DateMate.Models.ProfileViewModel
@using Microsoft.AspNet.Identity
@using DateMate.Logic

@{
    ViewBag.Title = "SeeProfile";
}



<h2>Profile</h2>

<div style="display: flex; justify-content: center">
    <div>
        <dl class="dl-horizontal">
            <dd>
                <img width="150" height="auto" src="@Url.Action("Image", new {id = Model.Id})" />
            </dd>
        </dl>
    </div>
    <div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Users.NickName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Users.NickName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Users.Location)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Users.Location)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Users.Fabric)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Users.Fabric)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Users.UserName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Users.UserName)
            </dd>
        </dl>
    </div>
</div>
<div>
    @if (User.Identity.GetUserId() == Model.Id)
    {
        @Html.ActionLink("My mates", "SeeFriends", "Friend")
    }
</div>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.Single().Text)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Posts)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.From.NickName): @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @*<td>
                        <img src="@Url.Action("Image", new { id = item.Id})" />
                    </td>*@
                </tr>
            }
            </table>
<div>
    @if (ExtensionMethods.CheckIfFriends(User.Identity.GetUserId(), Model.Id))
    {
        <form name="SendForm" id="SendPost">
            <textarea id="text" rows="6" cols="300"></textarea>
            <input type="submit" id="SendPost" value="Write post" />
        </form>
    }
</div>
<div>
    @if (User.Identity.GetUserId() == Model.Id)
    {
        @Html.ActionLink("Edit profile", "EditProfile", "Manage", new { id = Model.Id }, new { @type = "button", @class = "btn btn-primary" })
    }
</div>
<div>
    @if (User.Identity.GetUserId() != Model.Id && !ExtensionMethods.CheckIfFriends(User.Identity.GetUserId(), Model.Id))
    {
        @Html.ActionLink("Send mate request", "SendFriendRequest", "Friend", new { id = Model.Id }, new { @type = "button", @class = "btn btn-primary"})
    }
</div>

@section scripts {
<script type="text/javascript">

    $(document).ready(function () {
        $("#SendPost").submit(function () {
            var data = { from: "@User.Identity.GetUserId()", to: "@Model.Users.Id", text: $("#text").val()}

            $.ajax({
                data: data,
                url: '/api/PostApi/Post',
                type: 'POST',
                dataType: 'json',
                success: function () {
                    $("#text").reset();
                    location.reload();
                },
                error: function (e) {
                    e.preventDefault();
                    alert("Please write a post.")
                }
            });
        });
    });
</script>
}